class Solution {
public:
    bool isMatch(string s, string p) {
        bool** T = new bool*[s.length() + 1];
        for (int i = 0; i < s.length() + 1;++i){
            T[i] = new bool[p.length() + 1];
            for(int j=0;j<p.length()+1;++j)T[i][j]=false;
        }

        T[0][0] = true;
        for (int i = 1; i < p.length()+1; ++i) {
            if (p[i - 1] == '*') {
                T[0][i] = T[0][i - 2];
            }
        }

        for (int i = 1; i < s.length() + 1; ++i) {
            for (int j = 1; j < p.length() + 1; ++j) {
                if (p[j - 1] == '.' || p[j - 1] == s[i - 1])T[i][j] = T[i - 1][j - </div><div class="ace_line" style="height:17px">                    1];
                else if (p[j - 1] == '*') {
                    T[i][j] = T[i][j - 2];
                    if (p[j - 2] == '.' || p[j - 2] == s[i - 1])T[i][j] = T[i][j] |
                        T[i- 1][j];
                }
                else T[i][j] = false;
            }
        }
        return T[s.length()][p.length()];
    }
};

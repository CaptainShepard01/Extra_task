/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* list = new ListNode;
        int res = 0, left = 0, right =0, temp = 0;
        ListNode* first = l1, *second = l2, *iter=list, *cur;
        
        while(first!=nullptr||second!=nullptr){
            if(first!=nullptr){
                left= first->val;
                first=first->next;
            }
            else left=0;
            if(second!=nullptr){
                right=second->val;
                second=second->next;
            }
            else right=0;
            res=left+right+temp;
            temp=res/10;
            cur=new ListNode(res%10);
            iter->next=cur;
            iter=iter->next;
        }
        
        if(temp==1){
            cur=new ListNode(1);
            iter->next=cur;
        }
        return list->next;
    }
};

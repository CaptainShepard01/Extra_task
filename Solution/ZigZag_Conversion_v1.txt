class Solution {
public:
    string convert(string s, int numRows) {
        if (s.length() == 0 || numRows <= 0)return "";
        if (s.length() == 1 || numRows == 1)return s;
        int gap = (numRows - 1) * 2, cnt = 0, iter = 0, orig = 0, tmporig = 0;
        string convert; 

        for(int i=0;i<3;++i) {
            if(iter==0 || iter==2) {
                cnt = 0;
                while (orig + gap * cnt < s.length()) {
                    convert.push_back(s[orig + gap * cnt]);
                    cnt++;
                }

                iter++;
                orig++;
            }
            else {
                tmporig = orig;
                cnt = 0;            
                while (cnt < numRows - 2) {
                    convert.push_back(s[orig]);
                    while (orig + gap - iter * 2 < s.length()) {
                        convert.push_back(s[orig + gap - iter * 2]);
                        orig = orig + gap - iter * 2;
                        if (orig + iter * 2 >= s.length())break;
                        convert.push_back(s[orig + iter * 2]);
                        orig = orig + iter * 2;
                    }
                    iter++;
                    cnt++;
                    orig = ++tmporig;
                    if (orig >= s.length())break;
                }
                iter = 2;               
            }
        }
        return convert;
    }
};

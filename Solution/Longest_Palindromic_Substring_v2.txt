class Solution {
public:
    string longestPalindrome(string s) {
        if (s.size() == 0) return "";
        int start = 0, end = 0;
        
            for (int i = 0; i < s.size(); ++i) {
                int len1 = fromCenter(s, i, i);
                int len2 = fromCenter(s, i, i + 1);
                int len = fmax(len1, len2);

                if (len > end - start) {
                    start = i - (len - 1) / 2;
                    end = i + len / 2;
                }
            }
        return s.substr(start, end - start + 1);
    }
    int fromCenter(string s, int left, int right)
    {
        int l = left, r = right;
        while (l >= 0 && r < s.length() && s[l] == s[r]) {
            l--;
            r++;
        }
        return r - l - 1;
    }

}; 
